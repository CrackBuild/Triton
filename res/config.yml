# This will be ignored if 'bungeecord' is enabled.
languages:
  # The language name. This will influence the language file name.
  # i.e. If the name is en_GB, the language file name will be located at languages/en_GB.language
  # It's also not recommended to change this after someone has joined your server,
  # as their language will reset to default.
  en_GB:
    # This is the encoded flag code to show up the banner.
    # To get a working code, you should visit https://www.needcoolshoes.com/banner and create your banner.
    # When you finish, you should notice that the link as changed. Just copy the code generated by it.
    # i.e. If the link is https://www.needcoolshoes.com/banner?=eapwplpnpmbzbj then the code will be eapwplpnpmbzbj
    flag: eapwplpnpmbzbj
    # The Minecraft code is the Minecraft language code. You can find a complete list here:
    # https://minecraft.gamepedia.com/Language
    minecraft-code: [en_GB]
    # This display name. This will be the language name in non-code version. For example, en_UK should be English (UK)
    # Feel free to use colours here! You shouldn't use per-language here, as item names aren't translated yet.
    display-name: '&aEnglish (UK)'
    # Use this to run commands on language change.
    # The commands must not start with a slash.
    # Prefix with the desired type. Available types: 'PLAYER', 'SERVER'
    # i. e. "PLAYER:say I'm using English now!"
    # Please uncomment the lines below to start using this feature.
    # Available variables:
    # %player% - Replaced with the player's name.
    # %uuid% - Replaced with the player's UUID (with dashes).
  #    commands:
  #      - 'SERVER:say %player% (%uuid%) has just changed their language!'
  pt_PT:
    flag: bacLlt
    minecraft-code: [pt_PT]
    display-name: '&aPortuguese (Portugal)'
#    commands:
#      - 'SERVER:say %player% (%uuid%) has just changed their language!'

# The main language is the fallback language. If some message is not found, it will try to get it from here before
# returning an error message.
# Also, if you delete any language, the players with that language will have their language changed to this.
main-language: en_GB

# When enabled, the commands inside each language will run when the player joins.
run-language-commands-on-join: false

# Enable this if you're using the plugin on BungeeCord.
# A restart of the server and BungeeCord might be required after changing this setting.
bungeecord: false

# To access TWIN, you need a special token.
# To get it, join our Discord server at https://triton.rexcantor64.com/discord or DM me on Spigot.
# If you've enabled "bungeecord" above, there is no need to put your token here. You just need it on your BungeeCord config.
twin-token: ""

# Here you can enable and disable certain features of the plugin.
# Every section contains a "syntax-lang", "syntax-args" and "syntax-arg" field. This are used in the placeholders.
# If you change them, make sure to adjust accordingly in your plugins.
language-creation:
  chat:
    # Should the plugin check for placeholders in chat messages?
    enabled: true
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  actionbars:
    # Should the plugin check for placeholders in action bars?
    enabled: true
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  titles:
    # Should the plugin check for placeholders in titles and subtitles?
    enabled: true
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  guis:
    # Should the plugin check for placeholders in GUIs' titles?
    enabled: true
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  scoreboards:
    # Should the plugin check for placeholders in scoreboards?
    enabled: true
    # This adds support for custom scoreboard plugins. Most advanced scoreboard plugins will need this enabled to work.
    advanced: false
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  holograms:
    # Should the plugin check for placeholders in holograms (and/or entity display names)?
    # Normally the most recent plugins use armor stands to make the holograms, but if they don't, you can change it here.
    # Also, you can also translate other's entities name, like villagers. Add their entity type on the list below.
    # Full list: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/entity/EntityType.html
    types:
    - ARMOR_STAND
    # When enabled, the list above is ignored and all entities' names are checked and translated.
    allow-all: false
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  kick:
    # Should the plugin check for placeholders in kick messages?
    enabled: true
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  tab:
    # Should the plugin check for placeholders in tab?
    enabled: true
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  items:
    # Should the plugin check for placeholders in items?
    enabled: true
    # When enabled, items in the player's own inventory will also be checked.
    # Items might permanently change names if the players are in creative mode.
    allow-in-inventory: false
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  signs:
    # Should the plugin overlay the signs with the translations on languages.json?
    enabled: true
  bossbars:
    # Should the plugin check for placeholders in bossbars? (1.9+)
    enabled: true
    syntax-lang: lang
    syntax-args: args
    syntax-arg: arg
  # If any message contains a placeholder with the key defined in the field below, that message won't be sent to the players (console will still receive it).
  # Leave empty to disable this feature (it's disabled by default).
  # Example (assuming you have the default values on your config and you set disabled-line to 'disabled.line'):
  # If any message contains '[lang]disabled.line[/lang]' it won't be sent.
  disabled-line: ''
